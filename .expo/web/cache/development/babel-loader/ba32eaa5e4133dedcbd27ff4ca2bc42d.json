{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from \"./assets/cloudy.png\";\nimport weatherIcons from \"./icons.json\";\nvar access_key = \"da4ff156937c474d64069a4fe689ac4c\";\nvar lat = \"26.4344\";\nvar lon = \"50.1033\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      forcecast = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  useEffect(function () {\n    function didMount() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function didMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                Alert.alert('Permission to access location was denied');\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              location = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"https://api.openweathermap.org/data/2.5/onecall?l&units=metric&exclude=minutely&lat=\" + location.coords.latitude + \"&lon=\" + location.coords.longitude + \"&appid=da4ff156937c474d64069a4fe689ac4c\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setWeather(result);\n                setIsLoaded(true);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      city = _useState6[0],\n      setCity = _useState6[1];\n\n  useEffect(function () {\n    function didMount() {\n      var _await$Location$reque2, status, location;\n\n      return _regeneratorRuntime.async(function didMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque2 = _context2.sent;\n              status = _await$Location$reque2.status;\n\n              if (status !== 'granted') {\n                Alert.alert('Permission to access location was denied');\n              }\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              location = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://api.openweathermap.org/geo/1.0/reverse?lat=\" + location.coords.latitude + \"&lon=\" + location.coords.longitude + \"&appid=da4ff156937c474d64069a4fe689ac4c\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setCity(result);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  if (!isLoaded) {\n    React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: backgroundImage\n    },\n    style: styles.testImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.outercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, forcecast && React.createElement(Text, {\n    style: [styles.textleftLarge, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \" \", Math.round(forcecast.current.temp)), React.createElement(Text, {\n    style: [styles.subfont, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"\\xB0 C \")), city && React.createElement(Text, {\n    style: [styles.textleft, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 22\n    }\n  }, \" \", city[0].name, \",\", city[0].country)), React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.rowRe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, forcecast && React.createElement(Text, {\n    style: styles.textright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \" \", React.createElement(Ionicons, {\n    name: \"A\",\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 61\n    }\n  }), \" \", forcecast.current.weather[0].main, \" \")), forcecast && React.createElement(Text, {\n    style: [styles.textright, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, \"Wind \", forcecast.current.wind_speed, \" km/h \"))), React.createElement(TouchableOpacity, {\n    style: styles.transparentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Detailed info\"))), forcecast && forcecast.daily.slice(0, 5).map(function (d) {\n    var weather = d.weather[0];\n    var day = \"null\";\n    var dt = new Date(d.dt * 1000);\n\n    if (d === 0) {\n      day = \"Today\";\n    } else if (d === 1) {\n      day = \"Tommorow\";\n    } else {\n      day = dt.toLocaleString('en-us', {\n        weekday: 'long'\n      });\n    }\n\n    return React.createElement(View, {\n      style: styles.allweather,\n      key: d.dt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, day), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }\n    }, weather.main), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }\n    }, \" \", Math.round(d.temp.max), \"/\", Math.round(d.temp.min), \"\\xB0C\"), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  testImg: {\n    width: 375,\n    height: 400,\n    flex: 1,\n    marginBottom: 30\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\"\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\"\n  },\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\"\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  transparentButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230,\n    flexDirection: 'center'\n  },\n  item: {\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\"\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row'\n  },\n  rowRe: {\n    marginTop: 25,\n    flexDirection: 'row-reverse'\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  allweather: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 15,\n    fontSize: 20,\n    paddingLeft: 15,\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/App.js"],"names":["React","useEffect","useState","Location","Ionicons","backgroundImage","weatherIcons","access_key","lat","lon","App","forcecast","setWeather","isLoaded","setIsLoaded","didMount","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","enableHighAccuracy","location","fetch","coords","latitude","longitude","then","response","json","result","catch","error","message","city","setCity","flex","justifyContent","alignItems","styles","container","uri","testImg","outercontainer","col","row","textleftLarge","shadow","Math","round","current","temp","subfont","textleft","name","country","rowRe","textright","weather","main","wind_speed","transparentButton","daily","slice","map","d","day","dt","Date","toLocaleString","weekday","allweather","max","min","StyleSheet","create","width","height","marginBottom","color","fontSize","marginHorizontal","textAlign","textShadowColor","textShadowOffset","textShadowRadius","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","marginTop","flexDirection","item","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["\n// --------- To Do -------\n//4- icons - tu\n//5- two pages and connect - tu\n// test - wen\n\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport {SafeAreaView, ImageBackground, StyleSheet, Text, View, TouchableOpacity, ActivityIndicator, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from './assets/cloudy.png';\nimport weatherIcons from \"./icons.json\";\n\n\n//import Row from './Row'\n//import moment from 'moment';\n//var start_date = moment().format(\"YYYY-MM-DD\");\n//var end_date = moment(7, 'days').format(\"YYYY-MM-DD\");\nconst access_key = \"da4ff156937c474d64069a4fe689ac4c\";\n//const city = \"Dammam\";\nconst lat = \"26.4344\";\nconst lon = \"50.1033\";\n\n\n\nexport default function App() {\n  const [forcecast, setWeather] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n\n  useEffect(() => {\n    async function didMount() {\n\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission to access location was denied');\n      }\n      let location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true });\n      \n      return fetch(`https://api.openweathermap.org/data/2.5/onecall?l&units=metric&exclude=minutely&lat=${location.coords.latitude}&lon=${location.coords.longitude}&appid=da4ff156937c474d64069a4fe689ac4c`)\n        .then(response => {\n          return response.json()\n        })\n        .then(result => {\n          setWeather(result);\n\n          /*  var prefix = 'wi wi-';\n           var code = weather.current.weather[0].icon;\n           var icon = weatherIcons[code].icon;\n \n           // If we are not in the ranges mentioned above, add a day/night prefix.\n           if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n             icon = 'day-' + icon;\n           }\n \n           // Finally tack on the prefix.\n           icon = prefix + icon; */\n\n          setIsLoaded(true)\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n\n\n    }\n\n    didMount();\n\n  }, [])\n\n  const [city, setCity] = useState(null)\n\n\n  useEffect(() => {\n    async function didMount() {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission to access location was denied');\n      }\n      let location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true });\n      return fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${location.coords.latitude}&lon=${location.coords.longitude}&appid=da4ff156937c474d64069a4fe689ac4c`)\n        .then(response => {\n          return response.json()\n        })\n        .then(result => {\n          setCity(result);\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n\n\n    }\n    didMount();\n\n  }, [])\n\n  if (!isLoaded) {\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator color=\"#000\" />\n    </View>\n  }\n\n\n  return (\n    <ScrollView> \n      <View style={styles.container}>\n        \n      <ImageBackground source={{ uri: backgroundImage }} style={styles.testImg}>\n        <View style={styles.outercontainer} >\n          <View style={styles.col}>\n            <View style={styles.row}>\n              {forcecast && <Text style={[styles.textleftLarge, styles.shadow]}> {Math.round(forcecast.current.temp)}</Text>}\n              <Text style={[styles.subfont, styles.shadow]} >° C </Text>\n            </View>\n            {city && <Text style={[styles.textleft, styles.subfont]}> {city[0].name},{city[0].country}</Text>}\n          </View>\n\n          <View style={styles.col}>\n            <View style={styles.rowRe}>\n              {forcecast && <Text style={styles.textright}> <Ionicons name=\"A\" size={20} color=\"white\" /> {forcecast.current.weather[0].main} </Text>}\n            </View>\n            {forcecast && <Text style={[styles.textright, styles.subfont]}>Wind {forcecast.current.wind_speed} km/h </Text>}\n          </View>\n        </View>\n        <TouchableOpacity\n          style={styles.transparentButton} >\n          <Text style={styles.subfont}>Detailed info</Text>\n        </TouchableOpacity>\n\n      </ImageBackground>\n      {forcecast &&\n    forcecast.daily.slice(0, 5).map(d => {\n    const weather = d.weather[0];\n    var day =\"null\";\n    var dt = new Date(d.dt * 1000);\n    if(d===0){day=\"Today\"}\n    else if(d===1){day=\"Tommorow\"}\n    else {day=dt.toLocaleString('en-us',{ weekday: 'long' })}\n    return (<View style={styles.allweather} key={d.dt}>\n    <Text>{day}</Text>\n    <Text>{weather.main}</Text>\n    <Text> {Math.round(d.temp.max)}/{Math.round(d.temp.min)}°C</Text>\n\n    <View>\n    </View>\n  </View>)\n})}\n \n  \n  \n\n  \n  \n      \n    </View>\n    </ScrollView>\n\n  );\n\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  testImg: {\n    width: 375,\n    height: 400,\n    flex:1,\n    marginBottom: 30,\n    \n\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\",\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\",\n  },\n\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\",\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 5\n  },\n  transparentButton: { // fixed, do i need to add real deailes page? \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230, // ask for better way\n    flexDirection: 'center',\n\n  },\n  item: { // i need to expand this and create the style\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\",\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row',\n  },\n  rowRe: {\n    marginTop: 25,\n    flexDirection: 'row-reverse',\n\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n\n  allweather: {\n  flex:1,\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  padding:15, \n  fontSize: 20,\n  paddingLeft:15,\n  marginHorizontal: 16,\n\n\n\n  }\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}