{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from \"./assets/cloudy.png\";\nvar weatherIcon = \"null\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  useEffect(function () {\n    function didMount() {\n      return _regeneratorRuntime.async(function didMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch(\"http://api.weatherstack.com/current?access_key=5396596fed7b8184f7d3452029606433&query=Dammam\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setWeather(result);\n                setIsLoaded(true);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  settingWeather = function settingWeather() {\n    var currentweather = weather.current.weather_descriptions[0];\n\n    if (currentweather == \"Sunny\") {\n      return weatherIcon = \"weather-sunny\";\n    } else if (currentweather == \"Clear\") {} else if (currentweather == \"Cloudy\") {}\n\n    if (!isLoaded) {\n      React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }\n      }, React.createElement(ActivityIndicator, {\n        color: \"#000\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: backgroundImage\n      },\n      style: styles.testImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.outercontainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.col,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, weather && React.createElement(Text, {\n      style: [styles.textleftLarge, styles.shadow],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, \" \", weather.current.temperature), React.createElement(Text, {\n      style: [styles.subfont, styles.shadow],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, \"\\xB0 C\")), weather && React.createElement(Text, {\n      style: [styles.textleft, styles.subfont],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, \" \", weather.location.name, \" \", weather.location.country)), React.createElement(View, {\n      style: styles.col,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.rowRe,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }, weather && React.createElement(Text, {\n      style: styles.textright,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }\n    }, \" \", React.createElement(Ionicons, {\n      name: \"weatherIcon\",\n      size: 20,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 52\n      }\n    }), \" \", weather.current.weather_descriptions[0], \" \")), weather && React.createElement(Text, {\n      style: [styles.textright, styles.subfont],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Wind \", weather.current.wind_speed, \" km/h \"))), React.createElement(TouchableOpacity, {\n      style: styles.transparentButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.subfont,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Detailed info\"))), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    }, React.createElement(FlatList, {\n      data: weather,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Text, {\n          style: styles.item,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }\n        }, \" \", item.day, \"     \", item.weather, \"    \", item.degree);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    })));\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      alignItems: 'center'\n    },\n    testImg: {\n      width: 300,\n      height: 300,\n      marginBottom: 10\n    },\n    textright: {\n      color: \"white\",\n      fontSize: 18,\n      marginHorizontal: 5,\n      textAlign: \"right\"\n    },\n    textleft: {\n      color: \"white\",\n      fontSize: 18,\n      textAlign: \"left\"\n    },\n    textleftLarge: {\n      color: \"white\",\n      fontSize: 45,\n      textAlign: \"left\"\n    },\n    shadow: {\n      textShadowColor: 'rgba(0, 0, 0, 0.75)',\n      textShadowOffset: {\n        width: -1,\n        height: 1\n      },\n      textShadowRadius: 5\n    },\n    transparentButton: {\n      padding: 10,\n      borderWidth: 1,\n      borderRadius: 30,\n      borderColor: \"white\",\n      alignSelf: 'center',\n      backgroundColor: 'transparent',\n      justifyContent: 'space-between',\n      marginTop: 125\n    },\n    item: {\n      padding: 15,\n      fontSize: 14,\n      height: 44,\n      backgroundColor: \"#ffffff\"\n    },\n    row: {\n      marginTop: 25,\n      flexDirection: 'row'\n    },\n    rowRe: {\n      marginTop: 25,\n      flexDirection: 'row-reverse'\n    },\n    col: {\n      flexDirection: 'column',\n      paddingLeft: 10,\n      paddingRight: 10\n    },\n    subfont: {\n      fontSize: 12,\n      color: \"white\"\n    },\n    outercontainer: {\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/App.js"],"names":["React","useEffect","useState","Ionicons","backgroundImage","weatherIcon","App","weather","setWeather","isLoaded","setIsLoaded","didMount","fetch","then","response","json","result","catch","error","alert","message","settingWeather","currentweather","current","weather_descriptions","flex","justifyContent","alignItems","styles","container","uri","testImg","outercontainer","col","row","textleftLarge","shadow","temperature","subfont","textleft","location","name","country","rowRe","textright","wind_speed","transparentButton","item","day","degree","StyleSheet","create","width","height","marginBottom","color","fontSize","marginHorizontal","textAlign","textShadowColor","textShadowOffset","textShadowRadius","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","marginTop","flexDirection","paddingLeft","paddingRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;AAGA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,eAAP;AACA,IAAIC,WAAW,GAAG,MAAlB;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACAJ,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MACtBK,OADsB;AAAA,MACdC,UADc;;AAAA,mBAEIN,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAErBO,QAFqB;AAAA,MAEXC,WAFW;;AAG5BT,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeU,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSC,KAAK,CAAC,8FAAD,CAAL,CACJC,IADI,CACC,UAAAC,QAAQ,EAAI;AAChB,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AAED,eAJI,EAKJF,IALI,CAKC,UAAAG,MAAM,EAAI;AACdR,gBAAAA,UAAU,CAACQ,MAAD,CAAV;AACAN,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACD,eARI,EAUJO,KAVI,CAUE,UAAAC,KAAK,EAAI;AACdC,gBAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACD,eAZI,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAT,IAAAA,QAAQ;AAET,GAlBQ,EAkBN,EAlBM,CAAT;;AAmBDU,EAAAA,cAAc,GAAG,0BAAK;AACnB,QAAIC,cAAc,GAACf,OAAO,CAACgB,OAAR,CAAgBC,oBAAhB,CAAqC,CAArC,CAAnB;;AACF,QAAIF,cAAc,IAAI,OAAtB,EAA8B;AAC7B,aAAOjB,WAAW,GAAC,eAAnB;AACA,KAFD,MAGK,IAAIiB,cAAc,IAAI,OAAtB,EAA8B,CAClC,CADI,MAEA,IAAIA,cAAc,IAAI,QAAtB,EAA+B,CACnC;;AACD,QAAI,CAACb,QAAL,EAAe;AACb,0BAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEgB,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,UAAU,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAkB,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE1B;AAAN,OAA1B;AAAkD,MAAA,KAAK,EAAEwB,MAAM,CAACG,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC3B,OAAO,IAAI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACqB,MAAM,CAACO,aAAR,EAAsBP,MAAM,CAACQ,MAA7B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqD7B,OAAO,CAACgB,OAAR,CAAgBc,WAArE,CADZ,EAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACT,MAAM,CAACU,OAAR,EAAgBV,MAAM,CAACQ,MAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,CADA,EAKC7B,OAAO,IAAI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACqB,MAAM,CAACW,QAAR,EAAiBX,MAAM,CAACU,OAAxB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiD/B,OAAO,CAACiC,QAAR,CAAiBC,IAAlE,OAAyElC,OAAO,CAACiC,QAAR,CAAiBE,OAA1F,CALZ,CADE,EASA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,MAAM,CAACK,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACe,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECpC,OAAO,IAAI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEqB,MAAM,CAACgB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAE,EAAnC;AAAuC,MAAA,KAAK,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,OAAyFrC,OAAO,CAACgB,OAAR,CAAgBC,oBAAhB,CAAqC,CAArC,CAAzF,MAFZ,CADC,EAKCjB,OAAO,IAAI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACqB,MAAM,CAACgB,SAAR,EAAkBhB,MAAM,CAACU,OAAzB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsD/B,OAAO,CAACgB,OAAR,CAAgBsB,UAAtE,WALZ,CATA,CADF,EAkBE,oBAAC,gBAAD;AACA,MAAA,KAAK,EAAEjB,MAAM,CAACkB,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAElB,MAAM,CAACU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CAlBF,CADF,EA0BG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAEA,MAAA,IAAI,EAAE/B,OAFN;AAGA,MAAA,UAAU,EAAG;AAAA,YAAEwC,IAAF,QAAEA,IAAF;AAAA,eACd,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEnB,MAAM,CAACmB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA4BA,IAAI,CAACC,GAAjC,WAA2CD,IAAI,CAACxC,OAAhD,UAA6DwC,IAAI,CAACE,MAAlE,CADc;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CA1BH,CADF;AA4CD,GA3DA;;AA6DD,MAAMrB,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BtB,IAAAA,SAAS,EAAE;AACTF,MAAAA,UAAU,EAAE;AADH,KADoB;AAI/BI,IAAAA,OAAO,EAAE;AACPqB,MAAAA,KAAK,EAAE,GADA;AAEPC,MAAAA,MAAM,EAAE,GAFD;AAGPC,MAAAA,YAAY,EAAE;AAHP,KAJsB;AAU/BV,IAAAA,SAAS,EAAE;AACTW,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,gBAAgB,EAAE,CAHT;AAITC,MAAAA,SAAS,EAAC;AAJD,KAVoB;AAgB/BnB,IAAAA,QAAQ,EAAE;AACRgB,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,QAAQ,EAAE,EAFF;AAGRE,MAAAA,SAAS,EAAC;AAHF,KAhBqB;AAsB/BvB,IAAAA,aAAa,EAAE;AACboB,MAAAA,KAAK,EAAE,OADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbE,MAAAA,SAAS,EAAC;AAHG,KAtBgB;AA2B/BtB,IAAAA,MAAM,EAAC;AACLuB,MAAAA,eAAe,EAAE,qBADZ;AAELC,MAAAA,gBAAgB,EAAE;AAACR,QAAAA,KAAK,EAAE,CAAC,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAFb;AAGLQ,MAAAA,gBAAgB,EAAE;AAHb,KA3BwB;AAgC/Bf,IAAAA,iBAAiB,EAAC;AAChBgB,MAAAA,OAAO,EAAE,EADO;AAEhBC,MAAAA,WAAW,EAAE,CAFG;AAGhBC,MAAAA,YAAY,EAAE,EAHE;AAIhBC,MAAAA,WAAW,EAAC,OAJI;AAKhBC,MAAAA,SAAS,EAAC,QALM;AAMhBC,MAAAA,eAAe,EAAE,aAND;AAOhBzC,MAAAA,cAAc,EAAE,eAPA;AAQhB0C,MAAAA,SAAS,EAAC;AARM,KAhCa;AA0C/BrB,IAAAA,IAAI,EAAE;AACJe,MAAAA,OAAO,EAAE,EADL;AAEJN,MAAAA,QAAQ,EAAE,EAFN;AAGJH,MAAAA,MAAM,EAAE,EAHJ;AAIJc,MAAAA,eAAe,EAAC;AAJZ,KA1CyB;AAgD/BjC,IAAAA,GAAG,EAAE;AACHkC,MAAAA,SAAS,EAAC,EADP;AAEHC,MAAAA,aAAa,EAAC;AAFX,KAhD0B;AAoD/B1B,IAAAA,KAAK,EAAE;AACLyB,MAAAA,SAAS,EAAC,EADL;AAELC,MAAAA,aAAa,EAAC;AAFT,KApDwB;AAyD/BpC,IAAAA,GAAG,EAAE;AACHoC,MAAAA,aAAa,EAAC,QADX;AAEHC,MAAAA,WAAW,EAAC,EAFT;AAGHC,MAAAA,YAAY,EAAC;AAHV,KAzD0B;AA8D/BjC,IAAAA,OAAO,EAAE;AACPkB,MAAAA,QAAQ,EAAE,EADH;AAEPD,MAAAA,KAAK,EAAC;AAFC,KA9DsB;AAkE/BvB,IAAAA,cAAc,EAAC;AACbqC,MAAAA,aAAa,EAAC,KADD;AAEb3C,MAAAA,cAAc,EAAE;AAFH;AAlEgB,GAAlB,CAAf;AA0EC","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { FlatList, ImageBackground , StyleSheet, Text,View ,TouchableOpacity,ActivityIndicator } from 'react-native';\n//import Row from './Row'\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from './assets/cloudy.png'; \nlet weatherIcon = \"null\";\nexport default function App() { \n  const[weather,setWeather] = useState(null);     //these will be imported from API\n  const [isLoaded, setIsLoaded] = useState(false)\n  useEffect(() => {\n    async function didMount() {\n      return fetch(\"http://api.weatherstack.com/current?access_key=5396596fed7b8184f7d3452029606433&query=Dammam\")\n        .then(response => {\n          return response.json()\n        \n        })\n        .then(result => {\n          setWeather(result); // this is one object not an array\n          setIsLoaded(true)\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n    }\n    didMount();\n    \n  }, [])\n settingWeather = () =>{\n    let currentweather=weather.current.weather_descriptions[0];\n  if (currentweather == \"Sunny\"){\n   return weatherIcon=\"weather-sunny\";\n  }\n  else if (currentweather == \"Clear\"){\n  } \n  else if (currentweather == \"Cloudy\"){\n  } \n  if (!isLoaded) {\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator color=\"#000\" />\n    </View>\n  }\n    \n  return (\n    <View style={styles.container}>\n      <ImageBackground  source={{uri: backgroundImage}} style={styles.testImg}>\n        <View style={styles.outercontainer} >\n      <View style={styles.col}>\n      <View style={styles.row}> \n      {weather && <Text style={[styles.textleftLarge,styles.shadow]}> {weather.current.temperature}</Text>} \n      <Text style={[styles.subfont,styles.shadow]} >° C</Text>\n      </View> \n      {weather && <Text style={[styles.textleft,styles.subfont]}> {weather.location.name} {weather.location.country}</Text>}\n        </View>\n\n        <View style={styles.col}>\n       <View style={styles.rowRe}> \n       \n       {weather && <Text style={styles.textright}> <Ionicons name=\"weatherIcon\" size={20} color=\"white\" /> {weather.current.weather_descriptions[0]} </Text>}\n        </View>\n        {weather && <Text style={[styles.textright,styles.subfont]}>Wind {weather.current.wind_speed} km/h </Text>}\n        </View>\n        </View>\n        <TouchableOpacity\n        style={styles.transparentButton} >\n        <Text style={styles.subfont}>Detailed info</Text>\n      </TouchableOpacity>\n\n      \n      </ImageBackground>\n       <View>\n       <FlatList \n       \n       data={weather}\n       renderItem= {({item})=> (\n      <Text style={styles.item}> {item.day}     {item.weather}    {item.degree}</Text>\n               )\n            } \n          />\n      </View>   \n    \n    \n       {/* renderItem ={({obj})} => (Row {...(obj.item)} ) */}\n    \n  </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  testImg: {\n    width: 300,\n    height: 300,\n    marginBottom: 10,\n\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign:\"right\",\n  },\n  textleft: { \n    color: \"white\",\n    fontSize: 18,\n    textAlign:\"left\",\n  },\n\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign:\"left\",\n  },\n  shadow:{\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 5\n  },\n  transparentButton:{ // fixed, do i need to add real deailes page? \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor:\"white\",\n    alignSelf:'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop:125 // ask for better way\n  },\n  item: { // i need to expand this and create the style\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor:\"#ffffff\",\n  },\n  row: {\n    marginTop:25,\n    flexDirection:'row',\n  },\n  rowRe: {\n    marginTop:25,\n    flexDirection:'row-reverse',\n\n  },\n  col: {\n    flexDirection:'column',\n    paddingLeft:10,\n    paddingRight:10\n  },\n  subfont: {\n    fontSize: 12,\n    color:\"white\"\n  },\n  outercontainer:{\n    flexDirection:'row',\n    justifyContent: 'space-between',\n  }\n\n\n});\n\n}"]},"metadata":{},"sourceType":"module"}