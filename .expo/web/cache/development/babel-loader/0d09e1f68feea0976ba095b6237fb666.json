{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Row from \"./Row\";\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from \"./assets/cloudy.png\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([{\n    day: 'today',\n    weather: 'cloudy',\n    degree: '23/16 C'\n  }, {\n    day: 'Tommorow',\n    weather: 'Suuny',\n    degree: '32/20 C'\n  }, {\n    day: 'Saturday',\n    weather: 'Sunny',\n    degree: '30/19 C'\n  }, {\n    day: 'Sunday',\n    weather: 'Rainy',\n    degree: '24/13 C'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setweather = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: backgroundImage\n    },\n    style: styles.testImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.outercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textleftt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \" 23\"), React.createElement(Text, {\n    style: [styles.textleftt, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"\\xB0 C\")), React.createElement(Text, {\n    style: [styles.textleftt, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \" city, country\")), React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.rowRe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.textright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, \" \", React.createElement(Ionicons, {\n    name: \"cloudy-outline\",\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }\n  }), \" Cloudy \")), React.createElement(Text, {\n    style: [styles.textright, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Wind 3 km/h \"))), React.createElement(TouchableOpacity, {\n    style: styles.transparentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Detailed info\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }\n  }, React.createElement(FlatList, {\n    data: weather,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, \" \", item.day, \"     \", item.weather, \"    \", item.degree);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  testImg: {\n    width: 300,\n    height: 300,\n    marginBottom: 10\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\"\n  },\n  textleftt: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\"\n  },\n  transparentButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    position: \"absolute \",\n    absolute: \"bottom\"\n  },\n  item: {\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\"\n  },\n  row: {\n    marginTop: 30,\n    flexDirection: 'row'\n  },\n  rowRe: {\n    marginTop: 30,\n    flexDirection: 'row-reverse'\n  },\n  col: {\n    flexDirection: 'column'\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/App.js"],"names":["React","useEffect","useState","Row","Ionicons","backgroundImage","App","day","weather","degree","setweather","styles","container","uri","testImg","outercontainer","col","row","textleftt","subfont","rowRe","textright","transparentButton","item","StyleSheet","create","alignItems","width","height","marginBottom","color","fontSize","marginHorizontal","textAlign","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","justifyContent","position","absolute","marginTop","flexDirection"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { FlatList, Button, ImageBackground , StyleSheet, Text,View ,TouchableOpacity} from 'react-native';\nimport Row from './Row'\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from './assets/cloudy.png'; \n\n\nexport default function App() { // export is added here to summerize\n\n  const[weather,setweather] = useState([      //these will be imported frm API\n    {day : 'today', weather: 'cloudy', degree:'23/16 C'}, // Days need to be calclated \n    {day : 'Tommorow', weather: 'Suuny', degree:'32/20 C'},\n    {day : 'Saturday', weather: 'Sunny', degree:'30/19 C'},\n    {day : 'Sunday', weather: 'Rainy', degree:'24/13 C'},\n  ]); \n\n  return (\n    <View style={styles.container}>\n{/* <View>    <Button style={styles.transparentButton}  title=\" Detailed info \" />\n</View> */}\n\n\n      <ImageBackground  source={{uri: backgroundImage}} style={styles.testImg}>\n        <View style={styles.outercontainer} >\n      <View style={styles.col}>\n      <View style={styles.row}> \n      <Text style={styles.textleftt}> 23</Text> \n      <Text style={[styles.textleftt,styles.subfont]} >° C</Text>\n      </View> \n      <Text style={[styles.textleftt,styles.subfont]}> city, country</Text>\n        </View>\n\n        <View style={styles.col}>\n       <View style={styles.rowRe}> \n       <Text style={styles.textright}> <Ionicons name=\"cloudy-outline\" size={20} color=\"white\" /> Cloudy </Text>\n        </View>\n        <Text style={[styles.textright,styles.subfont]}>Wind 3 km/h </Text>\n        </View>\n        </View>\n        <TouchableOpacity\n        style={styles.transparentButton} >\n        <Text style={styles.subfont}>Detailed info</Text>\n      </TouchableOpacity>\n\n      \n      </ImageBackground>\n       <View>\n       <FlatList \n       \n       data={weather}\n       renderItem= {({item})=> (\n      <Text style={styles.item}> {item.day}     {item.weather}    {item.degree}</Text>\n               )\n            } \n          />\n      </View>   \n    \n    \n       {/* renderItem ={({obj})} => (Row {...(obj.item)} ) */}\n    \n  </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  testImg: {\n    width: 300,\n    height: 300,\n    marginBottom: 10,\n\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign:\"right\"\n  \n  },\n  textleftt: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign:\"left\"\n  },\n  transparentButton:{ // the color is not changing nor the size , idk why \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor:\"white\",\n    alignSelf:'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    position :\"absolute \",\n    absolute :\"bottom\"\n  },\n\n \n\n  item: { // i need to expand this \n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor:\"#ffffff\"\n  },\n  row: {\n    marginTop:30,\n    flexDirection:'row',\n  },\n  rowRe: {\n    marginTop:30,\n    flexDirection:'row-reverse',\n  },\n  col: {\n    flexDirection:'column',\n  },\n  subfont: {\n    fontSize: 12,\n    color:\"white\"\n  },\n  outercontainer:{\n    flexDirection:'row',\n    justifyContent: 'space-between',\n  }\n\n\n});\n\n "]},"metadata":{},"sourceType":"module"}