{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from \"./assets/cloudy.png\";\nvar start_date = moment().format(\"YYYY-MM-DD\");\nvar end_date = moment(7, 'days').format(\"YYYY-MM-DD\");\nvar access_key = \"da4ff156937c474d64069a4fe689ac4c\";\nvar city = \"Dammam\";\nvar lat = \"26.4344\";\nvar lon = \"50.1033\";\nvar weatherIcon = \"\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  useEffect(function () {\n    function didMount() {\n      return _regeneratorRuntime.async(function didMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=26.4344&lon=50.1033&appid=da4ff156937c474d64069a4fe689ac4c\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setWeather(result);\n                var prefix = 'wi wi-';\n                var code = result.current.weather[0].icon;\n                var icon = weatherIcons[code].icon;\n\n                if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n                  icon = 'day-' + icon;\n                }\n\n                icon = prefix + icon;\n                setIsLoaded(true);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  if (!isLoaded) {\n    React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: backgroundImage\n    },\n    style: styles.testImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.outercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, weather && React.createElement(Text, {\n    style: [styles.textleftLarge, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }, \" \", (5 / 9 * (parseInt(weather.current.temp) - 32)).toFixed(0)), React.createElement(Text, {\n    style: [styles.subfont, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"\\xB0 C \")), React.createElement(Text, {\n    style: [styles.textleft, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \" city,country\")), React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.rowRe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, weather && React.createElement(Text, {\n    style: styles.textright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }, \" \", React.createElement(Ionicons, {\n    name: icon,\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 59\n    }\n  }), \" \", weather.current.weather[0].main, \" \")), weather && React.createElement(Text, {\n    style: [styles.textright, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Wind \", weather.current.wind_speed, \" km/h \"))), React.createElement(TouchableOpacity, {\n    style: styles.transparentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Detailed info\"))), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: weather,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \" \", item.daily[0].weather[0].main, \"     \", item.weather, \"    \", item.degree);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  testImg: {\n    width: 300,\n    height: 300,\n    marginBottom: 10\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\"\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\"\n  },\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\"\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  transparentButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 125\n  },\n  item: {\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\"\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row'\n  },\n  rowRe: {\n    marginTop: 25,\n    flexDirection: 'row-reverse'\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/App.js"],"names":["React","useEffect","useState","moment","Ionicons","backgroundImage","start_date","format","end_date","access_key","city","lat","lon","weatherIcon","App","weather","setWeather","isLoaded","setIsLoaded","didMount","fetch","then","response","json","result","prefix","code","current","icon","weatherIcons","catch","error","alert","message","flex","justifyContent","alignItems","styles","container","uri","testImg","outercontainer","col","row","textleftLarge","shadow","parseInt","temp","toFixed","subfont","textleft","rowRe","textright","main","wind_speed","transparentButton","index","id","item","daily","degree","StyleSheet","create","width","height","marginBottom","color","fontSize","marginHorizontal","textAlign","textShadowColor","textShadowOffset","textShadowRadius","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","marginTop","flexDirection","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["\n// --------- To Do -------\n//1 - location\n//2- the flat list\n//3- city and country\n//4- icons\n//5- two pages and connect \n// test \n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { FlatList, ImageBackground, StyleSheet, Text, View, TouchableOpacity, ActivityIndicator, ScrollView } from 'react-native';\n//import Row from './Row'\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from './assets/cloudy.png';\nvar start_date = moment().format(\"YYYY-MM-DD\");\nvar end_date = moment(7, 'days').format(\"YYYY-MM-DD\");\nconst access_key = \"da4ff156937c474d64069a4fe689ac4c\";\nconst city = \"Dammam\";\nconst lat = \"26.4344\";\nconst lon = \"50.1033\";\nvar weatherIcon = \"\";\n\n/* const DATA = [\n  {\n    [daily[0].weather[0].main],\n    [daily[0].temp[0].day]\n  } // fix this \n]; */\n\nexport default function App() {\n  const [weather, setWeather] = useState(null);     //these will be imported from API\n  const [isLoaded, setIsLoaded] = useState(false)\n  useEffect(() => {\n    async function didMount() {\n\n      return fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=26.4344&lon=50.1033&appid=da4ff156937c474d64069a4fe689ac4c\")\n        .then(response => {\n          return response.json()\n\n        })\n        .then(result => {\n          setWeather(result); // this is one object not an array\n          var prefix = 'wi wi-';\n          var code = result.current.weather[0].icon;\n          var icon = weatherIcons[code].icon;\n\n          // If we are not in the ranges mentioned above, add a day/night prefix.\n          if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n            icon = 'day-' + icon;\n          }\n\n          // Finally tack on the prefix.\n          icon = prefix + icon;\n          setIsLoaded(true)\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n\n\n    }\n\n    didMount();\n\n  }, [])\n\n  if (!isLoaded) {\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator color=\"#000\" />\n    </View>\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={{ uri: backgroundImage }} style={styles.testImg}>\n        <View style={styles.outercontainer} >\n          <View style={styles.col}>\n            <View style={styles.row}>\n              {weather && <Text style={[styles.textleftLarge, styles.shadow]}> {((5 / 9) * (parseInt(weather.current.temp) - 32)).toFixed(0)}</Text>}\n              <Text style={[styles.subfont, styles.shadow]} >° C </Text>\n            </View>\n            <Text style={[styles.textleft, styles.subfont]}> city,country</Text>\n          </View>\n\n          <View style={styles.col}>\n            <View style={styles.rowRe}>\n\n              {weather && <Text style={styles.textright}> <Ionicons name={icon} size={20} color=\"white\" /> {weather.current.weather[0].main} </Text>}\n            </View>\n            {weather && <Text style={[styles.textright, styles.subfont]}>Wind {weather.current.wind_speed} km/h </Text>}\n          </View>\n        </View>\n        <TouchableOpacity\n          style={styles.transparentButton} >\n          <Text style={styles.subfont}>Detailed info</Text>\n        </TouchableOpacity>\n\n\n      </ImageBackground>\n      <ScrollView>\n\n        <FlatList\n          data={weather}\n          keyExtractor={({id},index) => id} \n          renderItem={({ item }) => {\n          return (\n\n            <Text style={styles.item}> {item.daily[0].weather[0].main}     {item.weather}    {item.degree}</Text>\n\n          );\n  \n          \n\n          }\n          }\n        />\n      </ScrollView>\n\n      {/* renderItem ={({obj})} => (Row {...(obj.item)} ) */}\n\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  testImg: {\n    width: 300,\n    height: 300,\n    marginBottom: 10,\n\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\",\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\",\n  },\n\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\",\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 5\n  },\n  transparentButton: { // fixed, do i need to add real deailes page? \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 125 // ask for better way\n  },\n  item: { // i need to expand this and create the style\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\",\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row',\n  },\n  rowRe: {\n    marginTop: 25,\n    flexDirection: 'row-reverse',\n\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  }\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}