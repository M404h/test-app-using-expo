{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\src\\\\DetailedInfo.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport weatherIcons from \"../icons.json\";\nimport { LinearGradient } from 'expo-linear-gradient';\nexport default function DetailedInfo(props) {\n  var forecast = props.route.params.forecast;\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#4c669f', '#3b5998', '#192f6a'],\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, forecast && React.createElement(Text, {\n    style: [styles.mainText, styles.col],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }\n  }, React.createElement(Ionicons, {\n    name: weatherIcons[forecast.current.weather[0].icon].icon,\n    size: 100,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), forecast.current.weather[0].main, \" \"), React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, forecast && React.createElement(Text, {\n    style: styles.textleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 20\n    }\n  }, \" \", React.createElement(Ionicons, {\n    name: \"sunny\",\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 51\n    }\n  }), \" Sunrise:\", new Date(forecast.current.sunrise * 1000).toLocaleString('en-us', {\n    hour: '2-digit',\n    minute: '2-digit'\n  }), \" \"), forecast && React.createElement(Text, {\n    style: styles.textRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, React.createElement(Ionicons, {\n    name: \"moon\",\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 51\n    }\n  }), \" Sunset :\", new Date(forecast.current.sunset * 1000).toLocaleString('en-us', {\n    hour: '2-digit',\n    minute: '2-digit'\n  }), \" \")), forecast && React.createElement(Text, {\n    style: styles.textleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, \" Temp: \", forecast.current.temp, \"  \"), forecast && React.createElement(Text, {\n    style: styles.textleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, \" Feels like \", forecast.daily[0].feels_like.day, \"  \"), forecast && React.createElement(Text, {\n    style: styles.textleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, \" Humidity: \", forecast.current.humidity, \" % \"), forecast && React.createElement(Text, {\n    style: styles.textleft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, \" Wind degree: \", forecast.current.wind_deg, \" \\xB0 \"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  mainText: {\n    color: \"white\",\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 20,\n    textAlign: \"left\",\n    margin: 20\n  },\n  textRight: {\n    color: \"white\",\n    fontSize: 20,\n    textAlign: \"right\",\n    margin: 20\n  },\n  textcenterLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"center\"\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  transparentButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230,\n    flexDirection: 'center'\n  },\n  item: {\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\"\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row'\n  },\n  rowRe: {\n    marginTop: 40,\n    flexDirection: 'row-reverse'\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  allweather: {\n    fontSize: 18,\n    margin: 20\n  },\n  horizontalLine: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.25\n  }\n});","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/src/DetailedInfo.js"],"names":["React","Ionicons","weatherIcons","LinearGradient","DetailedInfo","props","forecast","route","params","flex","styles","container","mainText","col","current","weather","icon","main","textleft","Date","sunrise","toLocaleString","hour","minute","textRight","sunset","temp","daily","feels_like","day","humidity","wind_deg","StyleSheet","create","alignItems","color","fontSize","textAlign","margin","textcenterLarge","shadow","textShadowColor","textShadowOffset","width","height","textShadowRadius","transparentButton","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","justifyContent","marginTop","flexDirection","item","row","rowRe","paddingLeft","paddingRight","subfont","outercontainer","allweather","horizontalLine","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport {StyleSheet, Text, View, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport weatherIcons from \"../icons.json\";\nimport { LinearGradient } from 'expo-linear-gradient';\n\n\n\nexport default function DetailedInfo(props) {\nconst forecast=props.route.params.forecast \n  return (\n    <ScrollView >\n    <LinearGradient colors={['#4c669f', '#3b5998', '#192f6a']} style={{ flex:1 }}>\n        \n\n      <View style={styles.container}>\n\n      {forecast && <Text style={[styles.mainText,styles.col]}> \n      <Ionicons name={weatherIcons[forecast.current.weather[0].icon].icon} size={100} color=\"white\" /> \n      {forecast.current.weather[0].main} </Text> } \n\n  \n      <View style={styles.col}> \n      {forecast && <Text style={styles.textleft}> <Ionicons name=\"sunny\" size={20} color=\"white\" /> Sunrise:\n      {new Date((forecast.current.sunrise)* 1000).toLocaleString('en-us',{ hour:'2-digit',minute:'2-digit'}) } </Text> }\n      {forecast && <Text style={styles.textRight}><Ionicons name=\"moon\" size={20} color=\"white\" /> Sunset :\n      {new Date((forecast.current.sunset)* 1000).toLocaleString('en-us',{ hour:'2-digit',minute:'2-digit'})} </Text> }\n\n     </View>\n     {forecast && <Text style={styles.textleft}> Temp: {forecast.current.temp}  </Text>}\n     {forecast && <Text style={styles.textleft}> Feels like {forecast.daily[0].feels_like.day}  </Text>}\n     {forecast && <Text style={styles.textleft}> Humidity: {forecast.current.humidity} % </Text>}\n     {forecast && <Text style={styles.textleft}> Wind degree: {forecast.current.wind_deg} ° </Text>}\n  \n      \n   \n      </View>\n      </LinearGradient>\n      </ScrollView>\n  );\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n\n  mainText: {\n    color: \"white\",\n    fontSize: 30,\n    textAlign: \"center\",\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 20,\n    textAlign: \"left\",\n    margin:20\n  },\n  textRight: {\n    color: \"white\",\n    fontSize: 20,\n    textAlign: \"right\",\n    margin:20\n\n  },\n\n  textcenterLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"center\",\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 5\n  },\n  transparentButton: { // fixed, do i need to add real deailes page? \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230, // ask for better way\n    flexDirection: 'center',\n\n  },\n  item: { // i need to expand this and create the style\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\",\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row',\n  },\n  rowRe: {\n    marginTop: 40,\n    flexDirection: 'row-reverse',\n\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginTop:10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    \n  },\n\n  allweather: {\n  fontSize:18,\n  margin:20\n  },\n\n  horizontalLine: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.25,\n  },\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}