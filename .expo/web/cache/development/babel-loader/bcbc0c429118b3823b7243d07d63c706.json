{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\maha\\\\Desktop\\\\test-app\\\\weather-app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from \"./assets/day.png\";\nimport weatherIcons from \"./icons.json\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      forecast = _useState2[0],\n      setForecast = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  useEffect(function () {\n    function didMount() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function didMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                Alert.alert('Permission to access location was denied');\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              location = _context.sent;\n              return _context.abrupt(\"return\", fetch(\"https://api.openweathermap.org/data/2.5/onecall?l&units=metric&exclude=minutely&lat=\" + location.coords.latitude + \"&lon=\" + location.coords.longitude + \"&appid=da4ff156937c474d64069a4fe689ac4c\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setForecast(result);\n                setIsLoaded(true);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      city = _useState6[0],\n      setCity = _useState6[1];\n\n  useEffect(function () {\n    function didMount() {\n      var _await$Location$reque2, status, location;\n\n      return _regeneratorRuntime.async(function didMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque2 = _context2.sent;\n              status = _await$Location$reque2.status;\n\n              if (status !== 'granted') {\n                Alert.alert('Permission to access location was denied');\n              }\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              location = _context2.sent;\n              return _context2.abrupt(\"return\", fetch(\"http://api.openweathermap.org/geo/1.0/reverse?lat=\" + location.coords.latitude + \"&lon=\" + location.coords.longitude + \"&appid=da4ff156937c474d64069a4fe689ac4c\").then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                setCity(result);\n              }).catch(function (error) {\n                alert(error.message);\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    didMount();\n  }, []);\n\n  if (!isLoaded) {\n    React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: \"#000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: {\n      uri: backgroundImage\n    },\n    style: styles.testImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.outercontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, forecast && React.createElement(Text, {\n    style: [styles.textleftLarge, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 28\n    }\n  }, \" \", Math.round(forecast.current.temp)), React.createElement(Text, {\n    style: [styles.subfont, styles.shadow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\xB0 C \")), city && React.createElement(Text, {\n    style: [styles.textleft, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 22\n    }\n  }, \" \", city[0].name, \",\", city[0].country)), React.createElement(View, {\n    style: styles.col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.rowRe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, forecast && React.createElement(Text, {\n    style: styles.textright,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 28\n    }\n  }, React.createElement(Ionicons, {\n    name: weatherIcons[forecast.current.weather[0].icon].icon,\n    size: 20,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 59\n    }\n  }), \" \", forecast.current.weather[0].main, \" \")), forecast && React.createElement(Text, {\n    style: [styles.textright, styles.subfont],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }\n  }, \"Wind \", forecast.current.wind_speed, \" km/h \"))), React.createElement(TouchableOpacity, {\n    style: styles.transparentButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Detailed info\"))), forecast && forecast.daily.slice(0, 5).map(function (d) {\n    var weather = d.weather[0];\n    var day = \"null\";\n    var dt = new Date(d.dt * 1000);\n\n    if (d.dt == 2) {\n      day = \"Today\";\n    } else if (d.dt == 3) {\n        day = \"Tommorow\";\n      } else {\n        day = dt.toLocaleString('en-us', {\n          weekday: 'long'\n        });\n      }\n\n    var code = weather.icon;\n    var icon = weatherIcons[code].icon;\n    return React.createElement(View, {\n      style: [styles.outercontainer, styles.horizontalLine],\n      key: d.dt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.allweather,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, day), React.createElement(Text, {\n      style: styles.allweather,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, \" \", React.createElement(Ionicons, {\n      name: icon,\n      size: 20,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 38\n      }\n    }), \"  \", weather.main), React.createElement(Text, {\n      style: styles.allweather,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }, \" \", Math.round(d.temp.max), \"/\", Math.round(d.temp.min), \"\\xB0C\"));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  testImg: {\n    width: 375,\n    height: 400,\n    flex: 1,\n    marginBottom: 30\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\"\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\"\n  },\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\"\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  transparentButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230,\n    flexDirection: 'center'\n  },\n  item: {\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\"\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row'\n  },\n  rowRe: {\n    marginTop: 40,\n    flexDirection: 'row-reverse'\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  allweather: {\n    fontSize: 18,\n    margin: 20\n  },\n  horizontalLine: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.25\n  }\n});","map":{"version":3,"sources":["C:/Users/maha/Desktop/test-app/weather-app/App.js"],"names":["React","useEffect","useState","Location","Ionicons","backgroundImage","weatherIcons","App","forecast","setForecast","isLoaded","setIsLoaded","didMount","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","enableHighAccuracy","location","fetch","coords","latitude","longitude","then","response","json","result","catch","error","message","city","setCity","flex","justifyContent","alignItems","styles","container","uri","testImg","outercontainer","col","row","textleftLarge","shadow","Math","round","current","temp","subfont","textleft","name","country","rowRe","textright","weather","icon","main","wind_speed","transparentButton","daily","slice","map","d","day","dt","Date","toLocaleString","weekday","code","horizontalLine","allweather","max","min","StyleSheet","create","width","height","marginBottom","color","fontSize","marginHorizontal","textAlign","textShadowColor","textShadowOffset","textShadowRadius","padding","borderWidth","borderRadius","borderColor","alignSelf","backgroundColor","marginTop","flexDirection","item","paddingLeft","paddingRight","margin","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["\n// --------- To Do -------\n//5- two pages and connect - tu\n// test - wen\n\nimport React, { useEffect, useState } from 'react';\nimport * as Location from 'expo-location';\nimport {SafeAreaView, ImageBackground, StyleSheet, Text, View, TouchableOpacity, ActivityIndicator, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport backgroundImage from './assets/day.png';\nimport weatherIcons from \"./icons.json\";\n\n\n\nexport default function App() {\n  const [forecast, setForecast] = useState(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n\n  useEffect(() => {\n    async function didMount() {\n\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission to access location was denied');\n      }\n      let location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true });\n      \n      return fetch(`https://api.openweathermap.org/data/2.5/onecall?l&units=metric&exclude=minutely&lat=${location.coords.latitude}&lon=${location.coords.longitude}&appid=da4ff156937c474d64069a4fe689ac4c`)\n        .then(response => {\n          return response.json()\n        })\n        .then(result => {\n          setForecast(result);\n          setIsLoaded(true)\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n\n\n    }\n\n    didMount();\n\n  }, [])\n\n  const [city, setCity] = useState(null)\n\n\n  useEffect(() => {\n    async function didMount() {\n      const { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission to access location was denied');\n      }\n      let location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true });\n      return fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${location.coords.latitude}&lon=${location.coords.longitude}&appid=da4ff156937c474d64069a4fe689ac4c`)\n        .then(response => {\n          return response.json()\n        })\n        .then(result => {\n          setCity(result);\n        })\n\n        .catch(error => {\n          alert(error.message)\n        })\n\n\n    }\n    didMount();\n\n  }, [])\n\n  if (!isLoaded) {\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator color=\"#000\" />\n    </View>\n  }\n\n  return (\n    <ScrollView> \n      <View style={styles.container}>\n        \n      <ImageBackground source={{ uri: backgroundImage }} style={styles.testImg}>\n        <View style={styles.outercontainer} >\n          <View style={styles.col}>\n            <View style={styles.row}>\n              {forecast && <Text style={[styles.textleftLarge, styles.shadow]}> {Math.round(forecast.current.temp)}</Text>}\n              <Text style={[styles.subfont, styles.shadow]} >° C </Text>\n            </View>\n            {city && <Text style={[styles.textleft, styles.subfont]}> {city[0].name},{city[0].country}</Text>}\n          </View>\n\n          <View style={styles.col}>\n            <View style={styles.rowRe}>\n              {forecast && <Text style={styles.textright}><Ionicons name={weatherIcons[forecast.current.weather[0].icon].icon} size={20} color=\"white\" /> {forecast.current.weather[0].main} </Text>}\n            </View>\n            {forecast && <Text style={[styles.textright, styles.subfont]}>Wind {forecast.current.wind_speed} km/h </Text>}\n          </View>\n        </View>\n        <TouchableOpacity\n          style={styles.transparentButton} >\n          <Text style={styles.subfont}>Detailed info</Text>\n        </TouchableOpacity>\n\n      </ImageBackground>\n      {forecast && // try to conver it to list \n    forecast.daily.slice(0, 5).map(d => {\n    const weather = d.weather[0];\n    var day =\"null\";\n    var dt = new Date(d.dt * 1000);\n    if(d.dt==2){day=\"Today\"} //not working \n    else if(d.dt==3){day=\"Tommorow\"}\n    else {day=dt.toLocaleString('en-us',{ weekday: 'long' })}\n    var code = weather.icon;\n    var icon = weatherIcons[code].icon;\n\n    return (<View style={[styles.outercontainer,styles.horizontalLine]} key={d.dt}>\n    <Text style={styles.allweather}>{day}</Text>\n    <Text style={styles.allweather}> <Ionicons name={icon} size={20} color=\"black\" />  {weather.main}</Text>\n    <Text style={styles.allweather}> {Math.round(d.temp.max)}/{Math.round(d.temp.min)}°C</Text>\n\n    </View>)\n})}\n \n\n      \n    </View>\n    </ScrollView>\n\n  );\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n  },\n  testImg: {\n    width: 375,\n    height: 400,\n    flex:1,\n    marginBottom: 30,\n    \n\n  },\n  textright: {\n    color: \"white\",\n    fontSize: 18,\n    marginHorizontal: 5,\n    textAlign: \"right\",\n  },\n  textleft: {\n    color: \"white\",\n    fontSize: 18,\n    textAlign: \"left\",\n  },\n\n  textleftLarge: {\n    color: \"white\",\n    fontSize: 45,\n    textAlign: \"left\",\n  },\n  shadow: {\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 5\n  },\n  transparentButton: { // fixed, do i need to add real deailes page? \n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: \"white\",\n    alignSelf: 'center',\n    backgroundColor: 'transparent',\n    justifyContent: 'space-between',\n    marginTop: 230, // ask for better way\n    flexDirection: 'center',\n\n  },\n  item: { // i need to expand this and create the style\n    padding: 15,\n    fontSize: 14,\n    height: 44,\n    backgroundColor: \"#ffffff\",\n  },\n  row: {\n    marginTop: 25,\n    flexDirection: 'row',\n  },\n  rowRe: {\n    marginTop: 40,\n    flexDirection: 'row-reverse',\n\n  },\n  col: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  subfont: {\n    fontSize: 12,\n    color: \"white\"\n  },\n  outercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    \n  },\n\n  allweather: {\n  fontSize:18,\n  margin:20\n  },\n\n  horizontalLine: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.25,\n  },\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}